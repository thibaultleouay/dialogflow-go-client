// Code generated by protoc-gen-go.
// source: google/cloud/dialogflow/v2beta1/session_entity_type.proto
// DO NOT EDIT!

/*
Package dialogflow is a generated protocol buffer package.

It is generated from these files:
	google/cloud/dialogflow/v2beta1/session_entity_type.proto

It has these top-level messages:
	SessionEntityType
	ListSessionEntityTypesRequest
	ListSessionEntityTypesResponse
	GetSessionEntityTypeRequest
	CreateSessionEntityTypeRequest
	UpdateSessionEntityTypeRequest
	DeleteSessionEntityTypeRequest
*/
package dialogflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_cloud_dialogflow_v2beta1 "github.com/thibaultleouay/dialogflow-go-client/google.golang.org/genproto/googleapis/cloud/dialogflow/v2beta1"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf3 "google.golang.org/genproto/protobuf/field_mask"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The types of modifications for a session entity type.
type SessionEntityType_EntityOverrideMode int32

const (
	// Not specified. This value should be never used.
	SessionEntityType_ENTITY_OVERRIDE_MODE_UNSPECIFIED SessionEntityType_EntityOverrideMode = 0
	// The collection of session entities overrides the collection of entities
	// in the corresponding developer entity type.
	SessionEntityType_ENTITY_OVERRIDE_MODE_OVERRIDE SessionEntityType_EntityOverrideMode = 1
	// The collection of session entities extends the collection of entities in
	// the corresponding developer entity type.
	// Calls to `ListSessionEntityTypes`, `GetSessionEntityType`,
	// `CreateSessionEntityType` and `UpdateSessionEntityType` return the full
	// collection of entities from the developer entity type and the session
	// entity type.
	SessionEntityType_ENTITY_OVERRIDE_MODE_SUPPLEMENT SessionEntityType_EntityOverrideMode = 2
)

var SessionEntityType_EntityOverrideMode_name = map[int32]string{
	0: "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
	1: "ENTITY_OVERRIDE_MODE_OVERRIDE",
	2: "ENTITY_OVERRIDE_MODE_SUPPLEMENT",
}
var SessionEntityType_EntityOverrideMode_value = map[string]int32{
	"ENTITY_OVERRIDE_MODE_UNSPECIFIED": 0,
	"ENTITY_OVERRIDE_MODE_OVERRIDE":    1,
	"ENTITY_OVERRIDE_MODE_SUPPLEMENT":  2,
}

func (x SessionEntityType_EntityOverrideMode) String() string {
	return proto.EnumName(SessionEntityType_EntityOverrideMode_name, int32(x))
}
func (SessionEntityType_EntityOverrideMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

// Represents a session entity type.
//
// Extends or replaces a developer entity type at the user session level (we
// refer to the entity types defined at the agent level as "developer entity
// types").
//
// Note: session entity types apply to all queries, regardless of the language.
type SessionEntityType struct {
	// Required. The unique identifier of this session entity type. Format:
	// `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
	// Display Name>`.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Required. Indicates whether the additional data should override or
	// supplement the developer entity type definition.
	EntityOverrideMode SessionEntityType_EntityOverrideMode `protobuf:"varint,2,opt,name=entity_override_mode,json=entityOverrideMode,enum=google.cloud.dialogflow.v2beta1.SessionEntityType_EntityOverrideMode" json:"entity_override_mode,omitempty"`
	// Required. The collection of entities associated with this session entity
	// type.
	Entities []*google_cloud_dialogflow_v2beta1.EntityType_Entity `protobuf:"bytes,3,rep,name=entities" json:"entities,omitempty"`
}

func (m *SessionEntityType) Reset()                    { *m = SessionEntityType{} }
func (m *SessionEntityType) String() string            { return proto.CompactTextString(m) }
func (*SessionEntityType) ProtoMessage()               {}
func (*SessionEntityType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SessionEntityType) GetEntities() []*google_cloud_dialogflow_v2beta1.EntityType_Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

// The request message for [SessionEntityTypes.ListSessionEntityTypes].
type ListSessionEntityTypesRequest struct {
	// Required. The session to list all session entity types from.
	// Format: `projects/<Project ID>/agent/sessions/<Session ID>`.
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// Optional. The maximum number of items to return in a single page. By
	// default 100 and at most 1000.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// Optional. The next_page_token value returned from a previous list request.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListSessionEntityTypesRequest) Reset()                    { *m = ListSessionEntityTypesRequest{} }
func (m *ListSessionEntityTypesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListSessionEntityTypesRequest) ProtoMessage()               {}
func (*ListSessionEntityTypesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// The response message for [SessionEntityTypes.ListSessionEntityTypes].
type ListSessionEntityTypesResponse struct {
	// The list of session entity types. There will be a maximum number of items
	// returned based on the page_size field in the request.
	SessionEntityTypes []*SessionEntityType `protobuf:"bytes,1,rep,name=session_entity_types,json=sessionEntityTypes" json:"session_entity_types,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListSessionEntityTypesResponse) Reset()                    { *m = ListSessionEntityTypesResponse{} }
func (m *ListSessionEntityTypesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListSessionEntityTypesResponse) ProtoMessage()               {}
func (*ListSessionEntityTypesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListSessionEntityTypesResponse) GetSessionEntityTypes() []*SessionEntityType {
	if m != nil {
		return m.SessionEntityTypes
	}
	return nil
}

// The request message for [SessionEntityTypes.GetSessionEntityType].
type GetSessionEntityTypeRequest struct {
	// Required. The name of the session entity type. Format:
	// `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
	// Display Name>`.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetSessionEntityTypeRequest) Reset()                    { *m = GetSessionEntityTypeRequest{} }
func (m *GetSessionEntityTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSessionEntityTypeRequest) ProtoMessage()               {}
func (*GetSessionEntityTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// The request message for [SessionEntityTypes.CreateSessionEntityType].
type CreateSessionEntityTypeRequest struct {
	// Required. The session to create a session entity type for.
	// Format: `projects/<Project ID>/agent/sessions/<Session ID>`.
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// Required. The session entity type to create.
	SessionEntityType *SessionEntityType `protobuf:"bytes,2,opt,name=session_entity_type,json=sessionEntityType" json:"session_entity_type,omitempty"`
}

func (m *CreateSessionEntityTypeRequest) Reset()                    { *m = CreateSessionEntityTypeRequest{} }
func (m *CreateSessionEntityTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSessionEntityTypeRequest) ProtoMessage()               {}
func (*CreateSessionEntityTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateSessionEntityTypeRequest) GetSessionEntityType() *SessionEntityType {
	if m != nil {
		return m.SessionEntityType
	}
	return nil
}

// The request message for [SessionEntityTypes.UpdateSessionEntityType].
type UpdateSessionEntityTypeRequest struct {
	// Required. The entity type to update. Format:
	// `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
	// Display Name>`.
	SessionEntityType *SessionEntityType `protobuf:"bytes,1,opt,name=session_entity_type,json=sessionEntityType" json:"session_entity_type,omitempty"`
	// Optional. The mask to control which fields get updated.
	UpdateMask *google_protobuf3.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
}

func (m *UpdateSessionEntityTypeRequest) Reset()                    { *m = UpdateSessionEntityTypeRequest{} }
func (m *UpdateSessionEntityTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateSessionEntityTypeRequest) ProtoMessage()               {}
func (*UpdateSessionEntityTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateSessionEntityTypeRequest) GetSessionEntityType() *SessionEntityType {
	if m != nil {
		return m.SessionEntityType
	}
	return nil
}

func (m *UpdateSessionEntityTypeRequest) GetUpdateMask() *google_protobuf3.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// The request message for [SessionEntityTypes.DeleteSessionEntityType].
type DeleteSessionEntityTypeRequest struct {
	// Required. The name of the entity type to delete. Format:
	// `projects/<Project ID>/agent/sessions/<Session ID>/entityTypes/<Entity Type
	// Display Name>`.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteSessionEntityTypeRequest) Reset()                    { *m = DeleteSessionEntityTypeRequest{} }
func (m *DeleteSessionEntityTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSessionEntityTypeRequest) ProtoMessage()               {}
func (*DeleteSessionEntityTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto.RegisterType((*SessionEntityType)(nil), "google.cloud.dialogflow.v2beta1.SessionEntityType")
	proto.RegisterType((*ListSessionEntityTypesRequest)(nil), "google.cloud.dialogflow.v2beta1.ListSessionEntityTypesRequest")
	proto.RegisterType((*ListSessionEntityTypesResponse)(nil), "google.cloud.dialogflow.v2beta1.ListSessionEntityTypesResponse")
	proto.RegisterType((*GetSessionEntityTypeRequest)(nil), "google.cloud.dialogflow.v2beta1.GetSessionEntityTypeRequest")
	proto.RegisterType((*CreateSessionEntityTypeRequest)(nil), "google.cloud.dialogflow.v2beta1.CreateSessionEntityTypeRequest")
	proto.RegisterType((*UpdateSessionEntityTypeRequest)(nil), "google.cloud.dialogflow.v2beta1.UpdateSessionEntityTypeRequest")
	proto.RegisterType((*DeleteSessionEntityTypeRequest)(nil), "google.cloud.dialogflow.v2beta1.DeleteSessionEntityTypeRequest")
	proto.RegisterEnum("google.cloud.dialogflow.v2beta1.SessionEntityType_EntityOverrideMode", SessionEntityType_EntityOverrideMode_name, SessionEntityType_EntityOverrideMode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SessionEntityTypes service

type SessionEntityTypesClient interface {
	// Returns the list of all session entity types in the specified session.
	ListSessionEntityTypes(ctx context.Context, in *ListSessionEntityTypesRequest, opts ...grpc.CallOption) (*ListSessionEntityTypesResponse, error)
	// Retrieves the specified session entity type.
	GetSessionEntityType(ctx context.Context, in *GetSessionEntityTypeRequest, opts ...grpc.CallOption) (*SessionEntityType, error)
	// Creates a session entity type.
	CreateSessionEntityType(ctx context.Context, in *CreateSessionEntityTypeRequest, opts ...grpc.CallOption) (*SessionEntityType, error)
	// Updates the specified session entity type.
	UpdateSessionEntityType(ctx context.Context, in *UpdateSessionEntityTypeRequest, opts ...grpc.CallOption) (*SessionEntityType, error)
	// Deletes the specified session entity type.
	DeleteSessionEntityType(ctx context.Context, in *DeleteSessionEntityTypeRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error)
}

type sessionEntityTypesClient struct {
	cc *grpc.ClientConn
}

func NewSessionEntityTypesClient(cc *grpc.ClientConn) SessionEntityTypesClient {
	return &sessionEntityTypesClient{cc}
}

func (c *sessionEntityTypesClient) ListSessionEntityTypes(ctx context.Context, in *ListSessionEntityTypesRequest, opts ...grpc.CallOption) (*ListSessionEntityTypesResponse, error) {
	out := new(ListSessionEntityTypesResponse)
	err := grpc.Invoke(ctx, "/google.cloud.dialogflow.v2beta1.SessionEntityTypes/ListSessionEntityTypes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionEntityTypesClient) GetSessionEntityType(ctx context.Context, in *GetSessionEntityTypeRequest, opts ...grpc.CallOption) (*SessionEntityType, error) {
	out := new(SessionEntityType)
	err := grpc.Invoke(ctx, "/google.cloud.dialogflow.v2beta1.SessionEntityTypes/GetSessionEntityType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionEntityTypesClient) CreateSessionEntityType(ctx context.Context, in *CreateSessionEntityTypeRequest, opts ...grpc.CallOption) (*SessionEntityType, error) {
	out := new(SessionEntityType)
	err := grpc.Invoke(ctx, "/google.cloud.dialogflow.v2beta1.SessionEntityTypes/CreateSessionEntityType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionEntityTypesClient) UpdateSessionEntityType(ctx context.Context, in *UpdateSessionEntityTypeRequest, opts ...grpc.CallOption) (*SessionEntityType, error) {
	out := new(SessionEntityType)
	err := grpc.Invoke(ctx, "/google.cloud.dialogflow.v2beta1.SessionEntityTypes/UpdateSessionEntityType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionEntityTypesClient) DeleteSessionEntityType(ctx context.Context, in *DeleteSessionEntityTypeRequest, opts ...grpc.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc.Invoke(ctx, "/google.cloud.dialogflow.v2beta1.SessionEntityTypes/DeleteSessionEntityType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SessionEntityTypes service

type SessionEntityTypesServer interface {
	// Returns the list of all session entity types in the specified session.
	ListSessionEntityTypes(context.Context, *ListSessionEntityTypesRequest) (*ListSessionEntityTypesResponse, error)
	// Retrieves the specified session entity type.
	GetSessionEntityType(context.Context, *GetSessionEntityTypeRequest) (*SessionEntityType, error)
	// Creates a session entity type.
	CreateSessionEntityType(context.Context, *CreateSessionEntityTypeRequest) (*SessionEntityType, error)
	// Updates the specified session entity type.
	UpdateSessionEntityType(context.Context, *UpdateSessionEntityTypeRequest) (*SessionEntityType, error)
	// Deletes the specified session entity type.
	DeleteSessionEntityType(context.Context, *DeleteSessionEntityTypeRequest) (*google_protobuf2.Empty, error)
}

func RegisterSessionEntityTypesServer(s *grpc.Server, srv SessionEntityTypesServer) {
	s.RegisterService(&_SessionEntityTypes_serviceDesc, srv)
}

func _SessionEntityTypes_ListSessionEntityTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSessionEntityTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionEntityTypesServer).ListSessionEntityTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dialogflow.v2beta1.SessionEntityTypes/ListSessionEntityTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionEntityTypesServer).ListSessionEntityTypes(ctx, req.(*ListSessionEntityTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionEntityTypes_GetSessionEntityType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSessionEntityTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionEntityTypesServer).GetSessionEntityType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dialogflow.v2beta1.SessionEntityTypes/GetSessionEntityType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionEntityTypesServer).GetSessionEntityType(ctx, req.(*GetSessionEntityTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionEntityTypes_CreateSessionEntityType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSessionEntityTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionEntityTypesServer).CreateSessionEntityType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dialogflow.v2beta1.SessionEntityTypes/CreateSessionEntityType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionEntityTypesServer).CreateSessionEntityType(ctx, req.(*CreateSessionEntityTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionEntityTypes_UpdateSessionEntityType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSessionEntityTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionEntityTypesServer).UpdateSessionEntityType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dialogflow.v2beta1.SessionEntityTypes/UpdateSessionEntityType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionEntityTypesServer).UpdateSessionEntityType(ctx, req.(*UpdateSessionEntityTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionEntityTypes_DeleteSessionEntityType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSessionEntityTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionEntityTypesServer).DeleteSessionEntityType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.dialogflow.v2beta1.SessionEntityTypes/DeleteSessionEntityType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionEntityTypesServer).DeleteSessionEntityType(ctx, req.(*DeleteSessionEntityTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SessionEntityTypes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.cloud.dialogflow.v2beta1.SessionEntityTypes",
	HandlerType: (*SessionEntityTypesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListSessionEntityTypes",
			Handler:    _SessionEntityTypes_ListSessionEntityTypes_Handler,
		},
		{
			MethodName: "GetSessionEntityType",
			Handler:    _SessionEntityTypes_GetSessionEntityType_Handler,
		},
		{
			MethodName: "CreateSessionEntityType",
			Handler:    _SessionEntityTypes_CreateSessionEntityType_Handler,
		},
		{
			MethodName: "UpdateSessionEntityType",
			Handler:    _SessionEntityTypes_UpdateSessionEntityType_Handler,
		},
		{
			MethodName: "DeleteSessionEntityType",
			Handler:    _SessionEntityTypes_DeleteSessionEntityType_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/cloud/dialogflow/v2beta1/session_entity_type.proto",
}

func init() {
	proto.RegisterFile("google/cloud/dialogflow/v2beta1/session_entity_type.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 833 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4d, 0x6f, 0xf3, 0x44,
	0x10, 0x66, 0x5d, 0x78, 0xd5, 0x77, 0x5f, 0x01, 0x7d, 0x97, 0x2a, 0x8d, 0x52, 0x9a, 0x06, 0x17,
	0xa1, 0x2a, 0x52, 0x6d, 0x35, 0x70, 0x29, 0xe5, 0x43, 0xb4, 0x71, 0xab, 0x48, 0x4d, 0x1a, 0x39,
	0x69, 0x25, 0xb8, 0x58, 0x9b, 0x78, 0xea, 0xba, 0x75, 0xbc, 0x26, 0xbb, 0x69, 0x9b, 0xa2, 0x5e,
	0xfa, 0x17, 0xb8, 0x72, 0xe2, 0xc8, 0x81, 0x1b, 0x3f, 0x80, 0x33, 0x47, 0xae, 0x48, 0x1c, 0x40,
	0xfc, 0x03, 0x24, 0xc4, 0x09, 0x79, 0xed, 0x34, 0x15, 0xfe, 0x48, 0x89, 0xb8, 0x79, 0x67, 0x77,
	0x66, 0x9e, 0x67, 0xf6, 0x99, 0xf1, 0xe2, 0x1d, 0x87, 0x31, 0xc7, 0x03, 0xbd, 0xef, 0xb1, 0x91,
	0xad, 0xdb, 0x2e, 0xf5, 0x98, 0x73, 0xe6, 0xb1, 0x6b, 0xfd, 0xaa, 0xd6, 0x03, 0x41, 0xb7, 0x75,
	0x0e, 0x9c, 0xbb, 0xcc, 0xb7, 0xc0, 0x17, 0xae, 0x18, 0x5b, 0x62, 0x1c, 0x80, 0x16, 0x0c, 0x99,
	0x60, 0x64, 0x3d, 0x72, 0xd5, 0xa4, 0xab, 0x36, 0x75, 0xd5, 0x62, 0xd7, 0xd2, 0xdb, 0x71, 0x6c,
	0x1a, 0xb8, 0x3a, 0xf5, 0x7d, 0x26, 0xa8, 0x70, 0x99, 0xcf, 0x23, 0xf7, 0xd2, 0xf6, 0xac, 0xcc,
	0x89, 0x8c, 0xa5, 0xd5, 0xd8, 0x45, 0xae, 0x7a, 0xa3, 0x33, 0x1d, 0x06, 0x81, 0x18, 0xc7, 0x9b,
	0x95, 0x7f, 0x6f, 0x9e, 0xb9, 0xe0, 0xd9, 0xd6, 0x80, 0xf2, 0xcb, 0xe8, 0x84, 0xfa, 0xa7, 0x82,
	0x5f, 0x76, 0x22, 0x3a, 0x86, 0x8c, 0xdd, 0x1d, 0x07, 0x40, 0x08, 0x7e, 0xd5, 0xa7, 0x03, 0x28,
	0xa2, 0x0a, 0xda, 0x7c, 0x6e, 0xca, 0x6f, 0x72, 0x8d, 0x97, 0xe3, 0xec, 0xec, 0x0a, 0x86, 0x43,
	0xd7, 0x06, 0x6b, 0xc0, 0x6c, 0x28, 0x2a, 0x15, 0xb4, 0xf9, 0x46, 0xcd, 0xd0, 0x66, 0x30, 0xd7,
	0x12, 0x59, 0xb4, 0xe8, 0xf3, 0x38, 0x8e, 0xd6, 0x64, 0x36, 0x98, 0x04, 0x12, 0x36, 0xd2, 0xc2,
	0x8b, 0xd2, 0xea, 0x02, 0x2f, 0x2e, 0x54, 0x16, 0x36, 0x5f, 0xd4, 0x6a, 0x33, 0x93, 0x25, 0xb2,
	0x98, 0x0f, 0x31, 0xd4, 0x7b, 0x84, 0x49, 0x32, 0x35, 0x79, 0x17, 0x57, 0x8c, 0x56, 0xb7, 0xd1,
	0xfd, 0xdc, 0x3a, 0x3e, 0x35, 0x4c, 0xb3, 0x51, 0x37, 0xac, 0xe6, 0x71, 0xdd, 0xb0, 0x4e, 0x5a,
	0x9d, 0xb6, 0xb1, 0xdf, 0x38, 0x68, 0x18, 0xf5, 0xa5, 0x57, 0xc8, 0x3b, 0x78, 0x2d, 0xf5, 0xd4,
	0x64, 0xb5, 0x84, 0xc8, 0x06, 0x5e, 0x4f, 0x3d, 0xd2, 0x39, 0x69, 0xb7, 0x8f, 0x8c, 0xa6, 0xd1,
	0xea, 0x2e, 0x29, 0x2a, 0xc7, 0x6b, 0x47, 0x2e, 0x17, 0x89, 0xa2, 0x70, 0x13, 0xbe, 0x1c, 0x01,
	0x17, 0xa4, 0x80, 0x9f, 0x05, 0x74, 0x08, 0xbe, 0x88, 0x2f, 0x21, 0x5e, 0x91, 0x55, 0xfc, 0x3c,
	0xa0, 0x0e, 0x58, 0xdc, 0xbd, 0x8d, 0x6a, 0xff, 0x9a, 0xb9, 0x18, 0x1a, 0x3a, 0xee, 0x2d, 0x90,
	0x35, 0x8c, 0xe5, 0xa6, 0x60, 0x97, 0xe0, 0x17, 0x17, 0xa4, 0xa3, 0x3c, 0xde, 0x0d, 0x0d, 0xea,
	0xf7, 0x08, 0x97, 0xb3, 0xb2, 0xf2, 0x80, 0xf9, 0x1c, 0x88, 0x8d, 0x97, 0x53, 0xd4, 0xcd, 0x8b,
	0xe8, 0x89, 0x85, 0x4f, 0x84, 0x36, 0x09, 0x4f, 0x64, 0x23, 0xef, 0xe1, 0x37, 0x7d, 0xb8, 0x11,
	0xd6, 0x23, 0xb0, 0x8a, 0x04, 0xfb, 0x7a, 0x68, 0x6e, 0x3f, 0x00, 0xde, 0xc6, 0xab, 0x87, 0x90,
	0x84, 0x3b, 0xa9, 0x51, 0x8a, 0x4c, 0xd5, 0x6f, 0x10, 0x2e, 0xef, 0x0f, 0x81, 0x0a, 0xc8, 0x74,
	0xcb, 0x2a, 0x6d, 0x0f, 0xbf, 0x95, 0xc2, 0x5d, 0x22, 0x9b, 0x8f, 0xfa, 0xcb, 0x04, 0x75, 0xf5,
	0x47, 0x84, 0xcb, 0x27, 0x81, 0x9d, 0x07, 0x2f, 0x03, 0x06, 0xfa, 0x1f, 0x61, 0x90, 0x5d, 0xfc,
	0x62, 0x24, 0x51, 0xc8, 0x59, 0x10, 0x53, 0x2c, 0x4d, 0x62, 0x4f, 0xc6, 0x85, 0x76, 0x10, 0x8e,
	0x8b, 0x26, 0xe5, 0x97, 0x26, 0x8e, 0x8e, 0x87, 0xdf, 0xea, 0x07, 0xb8, 0x5c, 0x07, 0x0f, 0x72,
	0x28, 0xa4, 0x5c, 0x4c, 0xed, 0xd7, 0x45, 0x4c, 0x92, 0xc2, 0x23, 0xbf, 0x20, 0x5c, 0x48, 0xd7,
	0x24, 0xf9, 0x64, 0x26, 0xd7, 0xdc, 0x16, 0x2a, 0x7d, 0x3a, 0xb7, 0x7f, 0xd4, 0x0c, 0xea, 0x67,
	0xf7, 0x3f, 0xff, 0xfe, 0xb5, 0xb2, 0x4b, 0x76, 0x1e, 0xe6, 0xef, 0x57, 0x91, 0x54, 0x3e, 0x0e,
	0x86, 0xec, 0x02, 0xfa, 0x82, 0xeb, 0x55, 0x9d, 0x3a, 0xe0, 0x8b, 0xc9, 0x2f, 0x81, 0xeb, 0xd5,
	0xbb, 0x78, 0x48, 0x47, 0x1c, 0x7e, 0x42, 0x78, 0x39, 0x4d, 0xc2, 0xe4, 0xa3, 0x99, 0xe0, 0x72,
	0x94, 0x5f, 0x9a, 0x43, 0x06, 0x69, 0x6c, 0xc2, 0x8b, 0xc9, 0xe3, 0xf2, 0x98, 0x8a, 0x5e, 0xbd,
	0x23, 0x7f, 0x20, 0xbc, 0x92, 0xd1, 0x5c, 0x64, 0x76, 0xb5, 0xf3, 0xdb, 0x72, 0x2e, 0x4e, 0xa7,
	0x92, 0x53, 0x5b, 0x9d, 0xff, 0x86, 0x3e, 0x4c, 0x6b, 0x36, 0xf2, 0x37, 0xc2, 0x2b, 0x19, 0x6d,
	0xfa, 0x04, 0xa2, 0xf9, 0x0d, 0x3e, 0x17, 0xd1, 0x0b, 0x49, 0xd4, 0xae, 0x35, 0xa7, 0x44, 0xd3,
	0x5e, 0x21, 0xff, 0xf1, 0x42, 0xd3, 0xc9, 0xff, 0x80, 0xf0, 0x4a, 0x46, 0x83, 0x3f, 0x81, 0x7c,
	0xfe, 0x68, 0x28, 0x15, 0x12, 0x43, 0xc6, 0x08, 0x1f, 0x2c, 0x13, 0x75, 0x56, 0xe7, 0x57, 0xe7,
	0xde, 0x6f, 0x08, 0x6f, 0xf4, 0xd9, 0x60, 0x16, 0xc2, 0xbd, 0x42, 0x02, 0x5c, 0x3b, 0xc4, 0xd2,
	0x46, 0x5f, 0xdc, 0x38, 0xae, 0x38, 0x1f, 0xf5, 0xb4, 0x3e, 0x1b, 0xe8, 0xe2, 0xdc, 0xed, 0xd1,
	0x91, 0x27, 0x3c, 0x60, 0x23, 0x3a, 0x7e, 0xf4, 0x18, 0xdb, 0x72, 0xd8, 0x56, 0xdf, 0x73, 0x43,
	0x2c, 0x71, 0x26, 0x87, 0x79, 0xd4, 0x77, 0x34, 0x36, 0x74, 0x74, 0x07, 0x7c, 0x49, 0x2c, 0xde,
	0xa2, 0x81, 0xcb, 0x33, 0x5f, 0x73, 0xbb, 0x53, 0xd3, 0x5f, 0x08, 0x7d, 0xab, 0x28, 0xf5, 0x83,
	0xef, 0x94, 0xf5, 0xc3, 0x28, 0xe6, 0xbe, 0x44, 0x5f, 0x9f, 0xa2, 0x3f, 0x8d, 0x9c, 0x7a, 0xcf,
	0x64, 0xfc, 0xf7, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x95, 0x0a, 0x2e, 0xa6, 0x0a, 0x00,
	0x00,
}
